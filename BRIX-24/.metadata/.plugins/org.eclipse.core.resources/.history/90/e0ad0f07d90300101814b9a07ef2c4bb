package com.iasys.testCases;

import java.util.NoSuchElementException;
import java.util.concurrent.TimeoutException;

import org.openqa.selenium.By;
import org.openqa.selenium.ElementNotVisibleException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

import com.iasys.base.TestBase;
import com.iasys.pages.LoginPage;
import com.relevantcodes.extentreports.LogStatus;

public class LoginTestCases extends TestBase {

	LoginPage loginpage;
	WebDriverWait wait;
	public LoginTestCases() {
	 super();
}
	
	@BeforeSuite(alwaysRun = true)
	public void setUp() {
		initialization();
		loginpage = new LoginPage();
	}

	@Test
	public void TC_01_loginWithValidcredentials()
	{
		loginpage.verify_login_with_valid_credentrials();
		try {
            // Wait for the pop-up to be visible, you can use an alert or modal-specific element
            WebElement concurrentLoginPopup = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//button[@class='brixDialog brixUserMgmtTabDialog e-control e-btn e-lib brixDialogSave_btn e-flat']")));
            // Step 3: Handle the pop-up (click on the 'Yes' or 'No' button based on your test)
            WebElement yesButton = driver.findElement(By.xpath("//button[@class='brixDialog brixUserMgmtTabDialog e-control e-btn e-lib brixDialogSave_btn e-flat']"));
            WebElement noButton = driver.findElement(By.id("//button[@class='brixDialog brixUserMgmtTabDialog e-control e-btn e-lib brixDialogClose_btn e-primary e-flat']"));
            
            if (yesButton.isDisplayed()) {
                // If pop-up asks for concurrent login, click on 'Yes' or 'No' based on your test case
                yesButton.click(); // Or noButton.click();
            }
        } catch (NoSuchElementException | ElementNotVisibleException e) {
            // If the pop-up does not appear (first-time login), continue with the normal flow
            System.out.println("No concurrent login pop-up displayed.");
        }
        
        // Step 4: Assert successful login or perform further actions
		boolean flag = loginpage.isLogoDisplay();
		Assert.assertTrue(flag);
		extentTest.log(LogStatus.INFO, "Logo is displayed correctly.");
		
	}
}


